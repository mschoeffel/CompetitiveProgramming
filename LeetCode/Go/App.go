package main

import (
	"Leetcode/X0001_TwoSum"
	"Leetcode/X0009_PalindromeNumber"
	"Leetcode/X0013_RomanToInteger"
	"Leetcode/X0014_LongestCommonPrefix"
	"Leetcode/X0020_ValidParentheses"
	"Leetcode/X0021_MergeTwoSortedLists"
	"Leetcode/X0026_RemoveDuplicatesFromSortedArray"
	"Leetcode/X0027_RemoveElement"
	"Leetcode/X0028_ImplementStrStr"
	"Leetcode/X0035_SearchInsertPosition"
	"Leetcode/X0053_MaximumSubarray"
	"Leetcode/X0058_LengthOfLastWord"
	"Leetcode/X0066_PlusOne"
	"Leetcode/X0067_AddBinary"
	"Leetcode/X0069_Sqrt"
	"Leetcode/X0070_ClimbingStairs"
	"Leetcode/X0083_RemoveDuplicatesFromSortedList"
	"Leetcode/X0088_MergeSortedArray"
	"Leetcode/X0094_BinaryTreeInorderTraversal"
	"Leetcode/X0100_SameTree"
	"Leetcode/X0101_SymmetricTree"
	"Leetcode/X0104_MaximumDepthOfBinaryTree"
	"Leetcode/X0108_ConvertSortedArrayToBinarySearchTree"
	"Leetcode/X0110_BalancedBinaryTree"
	"Leetcode/X0111_MinimumDepthOfBinaryTree"
	"Leetcode/X0112_PathSum"
	"Leetcode/X0118_PascalsTriangle"
	"Leetcode/X0119_PascalsTriangle2"
	"Leetcode/X0121_BestTimeToBuyAndSellStock"
	"Leetcode/X0125_ValidPalindrome"
	"Leetcode/X0136_SingleNumber"
	"Leetcode/X0141_LinkedListCycle"
	"Leetcode/X0144_BinaryTreePreorderTraversal"
	"Leetcode/X0145_BinaryTreePostorderTraversal"
	"Leetcode/X0160_IntersectionOfTwoLinkedLists"
	"Leetcode/X0168_ExcelSheetColumnTitle"
	"Leetcode/X0169_MajorityElement"
	"Leetcode/X0171_ExcelSheetColumnNumber"
	"Leetcode/X0190_ReverseBits"
	"Leetcode/X0191_NumberOf1Bits"
	"Leetcode/X0202_HappyNumber"
	"Leetcode/X0203_RemoveLinkedListElements"
	"Leetcode/X0205_IsomorphicStrings"
	"Leetcode/X0206_ReverseLinkedList"
	"Leetcode/X0217_ContainsDuplicate"
	"Leetcode/X0219_ContainsDuplicate2"
	"Leetcode/X0225_ImplementingStackUsingQueues"
	"Leetcode/X0226_InvertBinaryTree"
	"Leetcode/X0228_SummaryRanges"
	"Leetcode/X0231_PowerOfTwo"
	"Leetcode/X0232_ImplementQueueUsingStacks"
	"Leetcode/X0234_PalindromeLinkedList"
	"Leetcode/X0235_LowestCommonAncestorOfABinarySearchTree"
	"Leetcode/X0237_DeleteNodeInALinkedList"
	"Leetcode/X0242_ValidAnagram"
	"Leetcode/X0257_BinaryTreePaths"
	"Leetcode/X0258_AddDigits"
	"Leetcode/X0263_UglyNumber"
	"fmt"
)

func main() {
	fmt.Println("X0001_TwoSum:")
	X0001_TwoSum.Main()
	fmt.Println("X0009_PalindromeNumber:")
	X0009_PalindromeNumber.Main()
	fmt.Println("X0013_RomanToInteger:")
	X0013_RomanToInteger.Main()
	fmt.Println("X0014_LongestCommonPrefix:")
	X0014_LongestCommonPrefix.Main()
	fmt.Println("X0020_ValidParentheses:")
	X0020_ValidParentheses.Main()
	fmt.Println("X0021_MergeTwoSortedLists:")
	X0021_MergeTwoSortedLists.Main()
	fmt.Println("X0026_RemoveDuplicatesFromSortedArray:")
	X0026_RemoveDuplicatesFromSortedArray.Main()
	fmt.Println("X0027_RemoveElement:")
	X0027_RemoveElement.Main()
	fmt.Println("X0028_ImplementStrStr:")
	X0028_ImplementStrStr.Main()
	fmt.Println("X0035_SearchInsertPosition:")
	X0035_SearchInsertPosition.Main()
	fmt.Println("X0053_MaximumSubarray:")
	X0053_MaximumSubarray.Main()
	fmt.Println("X0058_LengthOfLastWord:")
	X0058_LengthOfLastWord.Main()
	fmt.Println("X0066_PlusOne:")
	X0066_PlusOne.Main()
	fmt.Println("X0067_AddBinary:")
	X0067_AddBinary.Main()
	fmt.Println("X0069_Sqrt:")
	X0069_Sqrt.Main()
	fmt.Println("X0070_ClimbingStairs:")
	X0070_ClimbingStairs.Main()
	fmt.Println("X0083_RemoveDuplicatesFromSortedList:")
	X0083_RemoveDuplicatesFromSortedList.Main()
	fmt.Println("X0088_MergeSortedArray:")
	X0088_MergeSortedArray.Main()
	fmt.Println("X0094_BinaryTreeInorderTraversal:")
	X0094_BinaryTreeInorderTraversal.Main()
	fmt.Println("X0100_SameTree:")
	X0100_SameTree.Main()
	fmt.Println("X0101_SymmetricTree:")
	X0101_SymmetricTree.Main()
	fmt.Println("X0104_MaxDepthOfBinaryTree:")
	X0104_MaximumDepthOfBinaryTree.Main()
	fmt.Println("X0108_ConvertSortedArrayToBinarySearchTree:")
	X0108_ConvertSortedArrayToBinarySearchTree.Main()
	fmt.Println("X0110_BalancedBinaryTree:")
	X0110_BalancedBinaryTree.Main()
	fmt.Println("X0111_MinDepthOfBinaryTree:")
	X0111_MinimumDepthOfBinaryTree.Main()
	fmt.Println("X0112_PathSum:")
	X0112_PathSum.Main()
	fmt.Println("X0118_PascalsTriangle:")
	X0118_PascalsTriangle.Main()
	fmt.Println("X0119_PascalsTriangle2:")
	X0119_PascalsTriangle2.Main()
	fmt.Println("X0121_BestTimeToBuyAndSellStock:")
	X0121_BestTimeToBuyAndSellStock.Main()
	fmt.Println("X0125_ValidPalindrome:")
	X0125_ValidPalindrome.Main()
	fmt.Println("X0136_SingleNumber:")
	X0136_SingleNumber.Main()
	fmt.Println("X0141_LinkedListCycle:")
	X0141_LinkedListCycle.Main()
	fmt.Println("X0144_BinaryTreePreorderTraversal:")
	X0144_BinaryTreePreorderTraversal.Main()
	fmt.Println("X0145_BinaryTreePostorderTraversal:")
	X0145_BinaryTreePostorderTraversal.Main()
	fmt.Println("X0160_IntersectionOfTwoLinkedLists:")
	X0160_IntersectionOfTwoLinkedLists.Main()
	fmt.Println("X0168_ExcelSheetColumnTitle:")
	X0168_ExcelSheetColumnTitle.Main()
	fmt.Println("X0169_MajorityElement:")
	X0169_MajorityElement.Main()
	fmt.Println("X0171_ExcelSheetColumnNumber:")
	X0171_ExcelSheetColumnNumber.Main()
	fmt.Println("X0190_ReverseBits:")
	X0190_ReverseBits.Main()
	fmt.Println("X0191_NumberOf1Bits:")
	X0191_NumberOf1Bits.Main()
	fmt.Println("X0202_HappyNumber:")
	X0202_HappyNumber.Main()
	fmt.Println("X0203_RemoveLinkedListElements:")
	X0203_RemoveLinkedListElements.Main()
	fmt.Println("X0205_IsomorphicStrings:")
	X0205_IsomorphicStrings.Main()
	fmt.Println("X0206_ReverseLinkedList:")
	X0206_ReverseLinkedList.Main()
	fmt.Println("X0217_ContainsDuplicate:")
	X0217_ContainsDuplicate.Main()
	fmt.Println("X0219_ContainsDuplicate2:")
	X0219_ContainsDuplicate2.Main()
	fmt.Println("X0225_ImplementStackUsingQueues:")
	X0225_ImplementingStackUsingQueues.Main()
	fmt.Println("X0226_InvertBinaryTree:")
	X0226_InvertBinaryTree.Main()
	fmt.Println("X0228_SummaryRanges:")
	X0228_SummaryRanges.Main()
	fmt.Println("X0231_PowerOfTwo:")
	X0231_PowerOfTwo.Main()
	fmt.Println("X0232_ImplementQueueUsingStacks:")
	X0232_ImplementQueueUsingStacks.Main()
	fmt.Println("X0234_PalindromeLinkedList:")
	X0234_PalindromeLinkedList.Main()
	fmt.Println("X0235_LowestCommonAncestorOfABinarySearchTree:")
	X0235_LowestCommonAncestorOfABinarySearchTree.Main()
	fmt.Println("X0237_DeleteNodeInALinkedList:")
	X0237_DeleteNodeInALinkedList.Main()
	fmt.Println("X0242_ValidAnagram:")
	X0242_ValidAnagram.Main()
	fmt.Println("X0257_BinaryTreePaths:")
	X0257_BinaryTreePaths.Main()
	fmt.Println("X0258_AddDigits:")
	X0258_AddDigits.Main()
	fmt.Println("X0263_UglyNumber:")
	X0263_UglyNumber.Main()
}
